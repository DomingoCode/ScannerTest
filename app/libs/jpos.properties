# @(#)jpos.properties   1.2.0 1-15-2000
#
# JavaPOS default jpos.config/loader properties file
#
# @author EMM
#

# Specify a custom JCL implementation by specifying the class implementing
# the jpos.loader.JposServiceManager class
# NOTE: the property jpos.config.serviceManagerClass is deprecated use instead
#                    jpos.loader.serviceManagerClass

jpos.loader.serviceManagerClass = jpos.loader.simple.SimpleServiceManager

# Set the following property to ON or TRUE and OFF or FALSE) to turn tracing on/off

jpos.util.tracing = ON

# Specify the class implementing the JposRegPopulator interface
# 1) Use the default (i.e. specify nothing) to get the serialization populator
#    This populator finds the "jpos.cfg" file searching the CLASSPATH root directories
#    then the root of each Zip or JAR file in the CLASSPATH
# 2) The SimpleXmlRegPopulator to load/save the JposEntry objects as an XML file
#    defined by the XML DTD defined in the jpos/res/jcl.dtd (see also the sample
#    jpos/res/jcl.xml file.  Both file are in the jpos.jar file)
# NOTE: to use the XML populator you need to have the IBM (now Apache group) XML4J 3.0 (or
#       later) OR the Apache XML project for Java Xerces-J installed on your system
#       Down load @ http://www.alphaworks.ibm.com OR @ http://xml.apache.org/xerces-j/index.html

#jpos.config.regPopulatorClass = jpos.config.simple.SimpleRegPopulator
jpos.config.regPopulatorClass = jpos.config.simple.xml.SimpleXmlRegPopulator
#jpos.config.regPopulatorClass = jpos.config.simple.xml.XercesRegPopulator

# Override the search path of the default serialization populator or specify the
# location of the XML entries file.
# Two possibilities:
# 1) Define the jpos.config.populatorFile to point to the local entries file (ser or XML)
# 2) Define the jpos.config.populatorFileURL to point to a URL (file, http, jar, ftp protocol)
#    that points to the entries file (again ser or XML)
# NOTE: specify the files path separator either as "/" (even on Windows systems)
#       for example a file at C:\Temp\jpos.cfg will be C:/Temp/jpos.cfg or use "\\" on Windows systems so
#       the example becomes C:\\Temp\\jpos.cfg
# NOTE1: if both are defined then the populatorFile is chosen first
# NOTE2: this works for both the default (ser) populator and the XML populator.  In the case
#        of the XML populator this property MUST be defined
# NOTE3: The "jar" URL protocol requires that you are using Java 2 (aka JDK 1.2.x)

#jpos.config.populatorFile = ./jars/jpos.cfg
#jpos.config.populatorFileURL = file:/C:/WorkStuff/JavaPOS/jars/jpos.cfg

jpos.config.populatorFile = file:/C:/Users/apushkarev/AndroidStudioProjects/ScannerTest/app/src/jpos.xml

#jpos.config.populator.file.0=jpos/res/jpos0.xml
#jpos.config.populatorFileURL = file:/./res/sample.xml
